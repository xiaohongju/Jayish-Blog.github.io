<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Golang注释/常量/变量</title>
      <link href="/2023/05/24/Golang%E6%B3%A8%E9%87%8A-%E5%B8%B8%E9%87%8F-%E5%8F%98%E9%87%8F/"/>
      <url>/2023/05/24/Golang%E6%B3%A8%E9%87%8A-%E5%B8%B8%E9%87%8F-%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="一、注释"><a href="#一、注释" class="headerlink" title="一、注释"></a>一、注释</h2><ol><li>单行注释</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行注释</span></span><br></pre></td></tr></table></figure><ol start="2"><li>多行注释</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  这是多行注释</span></span><br><span class="line"><span class="comment">  这是一个main函数，这个是go语言启动的入口</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="二、变量"><a href="#二、变量" class="headerlink" title="二、变量"></a>二、变量</h2><ol><li>声明变量使用<strong>var</strong>关键字：</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name <span class="keyword">type</span></span><br><span class="line"><span class="keyword">var</span> 变量名 变量类型</span><br></pre></td></tr></table></figure><pre><code>1. 第一个var是声明变量的关键字2. 第二个name，就是我们的变量名字3. 第三个type，就是用来代表变量的类型4. 命名规则驼峰命名，ex：userInfo</code></pre><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name <span class="type">string</span></span><br><span class="line"><span class="keyword">var</span> age <span class="type">int</span></span><br><span class="line"><span class="keyword">var</span> &#123;<span class="comment">//定义多个变量</span></span><br><span class="line">  name <span class="type">string</span> <span class="comment">//默认值 空</span></span><br><span class="line">  age <span class="type">int</span>  <span class="comment">//默认值 0</span></span><br><span class="line">  addres <span class="type">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>短变量声明并初始化</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// := 自动推导</span></span><br><span class="line">name := <span class="string">&quot;Jay&quot;</span></span><br><span class="line">age := <span class="number">18</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%T&quot;</span>, name, age) <span class="comment">//查看变量类型</span></span><br></pre></td></tr></table></figure><pre><code>1. 定义变量同时显示初始化2. 不能提供数据类型3. 只能在函数内部，不能随便到处定义</code></pre><ol start="3"><li>打印变量内存地址</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num <span class="type">int</span></span><br><span class="line">num = <span class="number">100</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;num:%d,内存地址:%p&quot;</span>, num, &amp;num) <span class="comment">//取地址符， &amp;变量名</span></span><br></pre></td></tr></table></figure><ol start="4"><li>变量的交换</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="type">int</span> = <span class="number">100</span></span><br><span class="line"><span class="keyword">var</span> b <span class="type">int</span> = <span class="number">200</span></span><br><span class="line">b, a = a, b</span><br><span class="line">fmt.Println(a, b)</span><br></pre></td></tr></table></figure><ol start="5"><li>匿名变量</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  a, _ := test() <span class="comment">//匿名变量_</span></span><br><span class="line">  _, b := test() <span class="comment">//匿名变量_</span></span><br><span class="line">  fmt.Println(a)</span><br><span class="line">  fmt.Println(b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span></span> (<span class="type">int</span>, <span class="type">int</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">100</span>, <span class="number">200</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>变量的作用域<ol><li>局部变量</li></ol></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> a <span class="type">int</span> = <span class="number">100</span> <span class="comment">//局部变量</span></span><br><span class="line">  <span class="keyword">var</span> b <span class="type">int</span> = <span class="number">200</span> <span class="comment">//局部变量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>    函数体内定义，只能在该函数内使用2. 全局变量</code></pre><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="type">int</span> = <span class="number">100</span> <span class="comment">//全局变量</span></span><br><span class="line"><span class="keyword">var</span> b <span class="type">int</span> = <span class="number">200</span> <span class="comment">//全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>    函数体外定义，在整个go文件都可使用3. 外面定义了全局变量，函数内部还可以定义局部变量，使用**就近原则**</code></pre><h2 id="三、常量"><a href="#三、常量" class="headerlink" title="三、常量"></a>三、常量</h2><ol><li>常量中的数据类型只可以是布尔型、数字型（整数型、浮点型和复数）和字符串型。</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> identifer[<span class="keyword">type</span>] = value</span><br><span class="line"><span class="keyword">const</span> URL <span class="type">string</span> = <span class="string">&quot;www.baidu.com&quot;</span> <span class="comment">//显示定义</span></span><br><span class="line"><span class="keyword">const</span> URL2 = <span class="string">&quot;www.google.cn&quot;</span>       <span class="comment">//隐式定义</span></span><br><span class="line"><span class="keyword">const</span> a, b, c = <span class="number">3.14</span>, <span class="string">&quot;Jay&quot;</span>, <span class="literal">false</span></span><br></pre></td></tr></table></figure><ol start="2"><li>特殊常量-iota</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="literal">iota</span>可以用作枚举值</span><br><span class="line">    <span class="keyword">const</span> (</span><br><span class="line">            a = <span class="literal">iota</span>    <span class="comment">//a=0</span></span><br><span class="line">            b           <span class="comment">//b=1</span></span><br><span class="line">            c           <span class="comment">//c=2</span></span><br><span class="line">            d = <span class="string">&quot;haha&quot;</span>  <span class="comment">//haha</span></span><br><span class="line">            e           <span class="comment">//haha</span></span><br><span class="line">            f = <span class="number">100</span>     <span class="comment">//100</span></span><br><span class="line">            g           <span class="comment">//100</span></span><br><span class="line">            h = <span class="literal">iota</span>    <span class="comment">//iota7</span></span><br><span class="line">            i           <span class="comment">//iota8</span></span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">const</span> (</span><br><span class="line">        j = <span class="literal">iota</span>        <span class="comment">//0</span></span><br><span class="line">        k               <span class="comment">//1</span></span><br><span class="line">        )</span><br><span class="line">        fmt.Println(a, b, c, d, e, f, g, h, i, j, k)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作笔记</title>
      <link href="/2023/05/24/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/05/24/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e2e5e7df53ed976523950a0c7b489e2d7e84ec0d87a51b1d4db610ffd166d257"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署到服务器</title>
      <link href="/2023/05/22/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2023/05/22/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo部署"><a href="#hexo部署" class="headerlink" title="hexo部署"></a>hexo部署</h1><h2 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel</span><br></pre></td></tr></table></figure><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><h2 id="创建自定用户名和密码"><a href="#创建自定用户名和密码" class="headerlink" title="创建自定用户名和密码"></a>创建自定用户名和密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd jayish</span><br><span class="line">passwd jayish</span><br></pre></td></tr></table></figure><h2 id="赋予jayish用户权限"><a href="#赋予jayish用户权限" class="headerlink" title="赋予jayish用户权限"></a>赋予jayish用户权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><p>输入 i 进入 insert 模式 ，找到 root ALL&#x3D;(ALL) ALL ，在其下方加入一行 jayish ALL&#x3D;(ALL) ALL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">// 在这里加入代码</span><br><span class="line">jayish  ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure><p>按下 ESC ，输入 wq ，保存 vim 文件。</p><p>修改 sudoers 文件权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /etc/sudoers </span><br><span class="line"><span class="built_in">mkdir</span> /data/www/hexo</span><br><span class="line"><span class="built_in">chown</span> jayish:jayish -R /data/www/hexo</span><br></pre></td></tr></table></figure><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><p>安装nginx可参考<a href="https://www.runoob.com/linux/nginx-install-setup.html">https://www.runoob.com/linux/nginx-install-setup.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/webserver/nginx/conf <span class="comment">#查看nginx.conf文件</span></span><br><span class="line">vim nginx.conf</span><br><span class="line"><span class="comment">#添加代码</span></span><br><span class="line">location ~ /data/www/hexo &#123; </span><br><span class="line">     proxy_pass http://127.0.0.1:4000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在本地代码hexo目录下"><a href="#在本地代码hexo目录下" class="headerlink" title="在本地代码hexo目录下"></a>在本地代码hexo目录下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>打开 hexo 的配置文件 _config.yml 修改 Deployment 位置的配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">root@116.205.136.160:/home/git/blog.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g // 编译</span><br><span class="line">hexo d //部署</span><br></pre></td></tr></table></figure><p>参考<a href="https://blog.csdn.net/jiaweilovemingming/article/details/124067428">https://blog.csdn.net/jiaweilovemingming/article/details/124067428</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang数据类型</title>
      <link href="/2023/05/22/Golang%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/05/22/Golang%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p><img src="http://qiniu.jayish.top/image-20230527104414410.png" alt="image-20230527104414410"></p><h2 id="1-布尔型"><a href="#1-布尔型" class="headerlink" title="1.布尔型"></a>1.布尔型</h2><p>布尔型的值只可以是常量true或false；var flag bool &#x3D; true</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> isFlag <span class="type">bool</span></span><br><span class="line">fmt.Println(isFlag) <span class="comment">//默认值false</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%t&quot;</span>, isFlag, isFlag) <span class="comment">//bool, false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-整数"><a href="#2-整数" class="headerlink" title="2.整数"></a>2.整数</h2><table><thead><tr><th>序号</th><th>类型和描述</th></tr></thead><tbody><tr><td>1</td><td>uint8无符号8位整型(0到255)</td></tr><tr><td>2</td><td>uint16无符号16位整型(0到65535)</td></tr><tr><td>3</td><td>uint32无符号32位整型(0到4294967295)</td></tr><tr><td>4</td><td>uint64无符号64位整型(0到18446744073709551615)</td></tr><tr><td>5</td><td>int8有符号8位整型(-128到127)</td></tr><tr><td>6</td><td>int16有符号16位整型(-32768到32767)</td></tr><tr><td>7</td><td>int32有符号32位整型(-2147483648到2147483647)</td></tr><tr><td>8</td><td>int64有符号64位整型(-9223372036854775808到9223372036854775807)</td></tr></tbody></table><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> age <span class="type">int</span> = <span class="number">18</span></span><br><span class="line">fmt.Println(age)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%d\n&quot;</span>, age, age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-浮点数"><a href="#3-浮点数" class="headerlink" title="3.浮点数"></a>3.浮点数</h2><table><thead><tr><th>序号</th><th>类型和描述</th></tr></thead><tbody><tr><td>1</td><td>float32 IEEE-754 32位浮点型数</td></tr><tr><td>2</td><td>float64 IEEE-754 64位浮点型数(默认)</td></tr><tr><td>3</td><td>complex64 32位实数和虚数</td></tr><tr><td>4</td><td>complex128 64位实数和虚数</td></tr></tbody></table><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> money <span class="type">float64</span> = <span class="number">3.145</span></span><br><span class="line">fmt.Println(money)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%d\n&quot;</span>, age, age) </span><br><span class="line"><span class="comment">//%f默认保留小数点6位数</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%.2f\n&quot;</span>, money, money) <span class="comment">//%.2f保留2位；丢失精度，四舍五入</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-字符串型"><a href="#4-字符串型" class="headerlink" title="4.字符串型"></a>4.字符串型</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> str <span class="type">string</span></span><br><span class="line">str = <span class="string">&quot;hello,Golang&quot;</span></span><br><span class="line">fmt.Println(str)</span><br><span class="line">fmt.Println(str + <span class="string">&quot;,study&quot;</span>) <span class="comment">//字符串拼接 +</span></span><br><span class="line"><span class="comment">//转义字符 \&quot;  \n  \t</span></span><br><span class="line">fmt.Println(str + <span class="string">&quot;\&quot;study&quot;</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%s\n&quot;</span>, str, str)</span><br><span class="line"><span class="comment">//编码表ASCII字符码</span></span><br><span class="line"><span class="comment">//所有中国汉字GBK表</span></span><br><span class="line"><span class="comment">//全世界的编码表 Unicode编码表</span></span><br><span class="line">v1 := <span class="string">&#x27;A&#x27;</span></span><br><span class="line">v2 := <span class="string">&quot;A&quot;</span></span><br><span class="line">v3 := <span class="string">&#x27;中&#x27;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%d\n&quot;</span>, v1, v1) <span class="comment">//int32,65</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%s\n&quot;</span>, v2, v2) <span class="comment">//string,A</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%d\n&quot;</span>, v3, v3) <span class="comment">//int32,20013</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遍历字符串string</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str := <span class="string">&quot;hello,jay&quot;</span></span><br><span class="line">fmt.Println(str)</span><br><span class="line"><span class="comment">//获取字符串的长度 len</span></span><br><span class="line">fmt.Println(<span class="string">&quot;字符串的长度为：&quot;</span>, <span class="built_in">len</span>(str))</span><br><span class="line"><span class="comment">//获取指定的字节,下标从 0 开始</span></span><br><span class="line">fmt.Println(<span class="string">&quot;字符打印：&quot;</span>, str[<span class="number">0</span>]) <span class="comment">//输出的是ASCII码表对应的值</span></span><br><span class="line"><span class="comment">//for循环遍历 string</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(str); i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%c&quot;</span>, str[i])</span><br><span class="line"><span class="comment">//fmt.Println(str[i])</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//for range 循环，遍历数组、切片...</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> str &#123;</span><br><span class="line">fmt.Println()</span><br><span class="line">fmt.Print(i)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%c&quot;</span>, v)</span><br><span class="line">fmt.Print(<span class="string">&quot;\t&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-数据类型转换"><a href="#5-数据类型转换" class="headerlink" title="5.数据类型转换"></a>5.数据类型转换</h2><p>Go语言不存在隐式类型转换，因此所有的类型转换都必须显示的声明</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">valueOfTypeB = typeB(valueOfTypeA)</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := <span class="number">3</span></span><br><span class="line">b := <span class="number">5.0</span></span><br><span class="line"><span class="keyword">var</span> num <span class="type">byte</span> = <span class="number">11</span></span><br><span class="line"><span class="comment">//类型转换</span></span><br><span class="line">c := <span class="type">float64</span>(a)</span><br><span class="line">d := <span class="type">int</span>(b)</span><br><span class="line">e := <span class="type">int</span>(num)</span><br><span class="line">f := <span class="type">byte</span>(a)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, a) <span class="comment">//int</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, b) <span class="comment">//float64</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, c) <span class="comment">//float64</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, d) <span class="comment">//int</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, e) <span class="comment">//int</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, f) <span class="comment">//uint8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
